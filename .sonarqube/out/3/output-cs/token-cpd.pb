√á
9C:\Cds.BusinessCustomer\src\Infrastructure\CartegieApi.cs
	namespace 	
Cds
 
. #
TestFormationDotnetcore %
.% &
Infrastructure& 4
{ 
public 

class 
CartegieApi 
: 
ICartegieApi +
{ 
private 
readonly 
IHttpClientFactory +
_clientFactory, :
;: ;
private 
readonly !
CartegieConfiguration .
_configuration/ =
;= >
public 
CartegieApi 
( !
CartegieConfiguration 0
myConfiguration1 @
,@ A
IHttpClientFactoryB T
clientFactoryU b
)b c
{ 	
_clientFactory 
= 
clientFactory *
;* +
_configuration 
= 
myConfiguration ,
;, -
} 	
public$$ 
async$$ 
Task$$ 
<$$ #
CustomerSingleSearchDto$$ 1
>$$1 2
GetInfosById$$3 ?
($$? @
string$$@ F
id$$G I
)$$I J
{%% 	
try&& 
{'' 
if(( 
((( 
string(( 
.(( 
IsNullOrEmpty(( (
(((( )
id(() +
)((+ ,
)((, -
throw)) 
new)) !
ArgumentNullException)) 3
())3 4
nameof))4 :
()): ;
id)); =
)))= >
)))> ?
;))? @#
CustomerSingleSearchDto++ '
consumerInfo++( 4
=++5 6
await++7 <
IdSearch++= E
(++E F
id++F H
)++H I
;++I J
if,, 
(,, 
consumerInfo,,  
==,,! #
null,,$ (
),,( )
throw-- 
new-- !
ArgumentNullException-- 3
(--3 4
nameof--4 :
(--: ;
id--; =
)--= >
)--> ?
;--? @
return// 
consumerInfo// #
;//# $
}00 
catch11 
(11 !
ArgumentNullException11 (
)11( )
{22 
return33 
null33 
;33 
}44 
}55 	
public<< 
async<< 
Task<< 
<<< #
CustomerSingleSearchDto<< 1
><<1 2
GetInfosBySiret<<3 B
(<<B C
string<<C I
siret<<J O
)<<O P
{== 	
try>> 
{?? 
if@@ 
(@@ 
string@@ 
.@@ 
IsNullOrEmpty@@ (
(@@( )
siret@@) .
)@@. /
||@@0 2
siret@@3 8
.@@8 9
Length@@9 ?
!=@@@ B
	Constants@@C L
.@@L M
SiretRequiredLength@@M `
)@@` a
throwAA 
newAA !
ArgumentNullExceptionAA 3
(AA3 4
nameofAA4 :
(AA: ;
siretAA; @
)AA@ A
)AAA B
;AAB C#
CustomerSingleSearchDtoCC '
consumerInfoCC( 4
=CC5 6
awaitCC7 <
SiretSearchCC= H
(CCH I
siretCCI N
)CCN O
;CCO P
ifDD 
(DD 
consumerInfoDD  
==DD! #
nullDD$ (
)DD( )
throwEE 
newEE !
ArgumentNullExceptionEE 3
(EE3 4
nameofEE4 :
(EE: ;
siretEE; @
)EE@ A
)EEA B
;EEB C
returnGG 
consumerInfoGG #
;GG# $
}HH 
catchII 
(II !
ArgumentNullExceptionII (
)II( )
{JJ 
returnKK 
nullKK 
;KK 
}LL 
}MM 	
publicUU 
asyncUU 
TaskUU 
<UU 
ListUU 
<UU %
CustomerMultipleSearchDtoUU 8
>UU8 9
>UU9 :
GetInfosByCriteriaUU; M
(UUM N
stringUUN T
socialReasonUUU a
,UUa b
stringUUc i
zipCodeUUj q
)UUq r
{VV 	
tryWW 
{XX 
ifYY 
(YY 
stringYY 
.YY 
IsNullOrEmptyYY (
(YY( )
zipCodeYY) 0
)YY0 1
||YY2 4
stringYY5 ;
.YY; <
IsNullOrEmptyYY< I
(YYI J
socialReasonYYJ V
)YYV W
)YYW X
throwZZ 
newZZ !
ArgumentNullExceptionZZ 3
(ZZ3 4
)ZZ4 5
;ZZ5 6
List\\ 
<\\ %
CustomerMultipleSearchDto\\ .
>\\. /
list\\0 4
=\\5 6
await\\7 <
MultipleSearch\\= K
(\\K L
socialReason\\L X
,\\X Y
zipCode\\Z a
)\\a b
;\\b c
if]] 
(]] 
list]] 
==]] 
null]]  
||]]! #
list]]$ (
.]]( )
Count]]) .
==]]/ 1
$num]]2 3
)]]3 4
throw^^ 
new^^ !
ArgumentNullException^^ 3
(^^3 4
)^^4 5
;^^5 6
return`` 
list`` 
;`` 
}aa 
catchbb 
(bb !
ArgumentNullExceptionbb (
)bb( )
{cc 
returndd 
newdd 
Listdd 
<dd  %
CustomerMultipleSearchDtodd  9
>dd9 :
(dd: ;
)dd; <
;dd< =
}ee 
}ff 	
privatepp 
asyncpp 
Taskpp 
<pp #
CustomerSingleSearchDtopp 2
>pp2 3
IdSearchpp4 <
(pp< =
stringpp= C
idppD F
)ppF G
{qq 	
tryrr 
{ss 
iftt 
(tt 
stringtt 
.tt 
IsNullOrEmptytt (
(tt( )
idtt) +
)tt+ ,
)tt, -
throwuu 
newuu !
ArgumentNullExceptionuu 3
(uu3 4
nameofuu4 :
(uu: ;
iduu; =
)uu= >
)uu> ?
;uu? @#
CustomerSingleSearchDtoww '
ConsumerInfoww( 4
=ww5 6
newww7 :#
CustomerSingleSearchDtoww; R
(wwR S
)wwS T
;wwT U
varyy 
clientyy 
=yy 
_clientFactoryyy +
.yy+ ,
CreateClientyy, 8
(yy8 9
)yy9 :
;yy: ;
client{{ 
.{{ 
BaseAddress{{ "
={{# $
new{{% (
Uri{{) ,
({{, -
_configuration{{- ;
.{{; <
BaseUrl{{< C
){{C D
;{{D E
client}} 
.}} !
DefaultRequestHeaders}} ,
.}}, -
Clear}}- 2
(}}2 3
)}}3 4
;}}4 5
client~~ 
.~~ !
DefaultRequestHeaders~~ ,
.~~, -
Accept~~- 3
.~~3 4
Add~~4 7
(~~7 8
new~~8 ;+
MediaTypeWithQualityHeaderValue~~< [
(~~[ \
$str~~\ n
)~~n o
)~~o p
;~~p q!
HttpResponseMessage
ÄÄ #
res
ÄÄ$ '
=
ÄÄ( )
await
ÄÄ* /
client
ÄÄ0 6
.
ÄÄ6 7
GetAsync
ÄÄ7 ?
(
ÄÄ? @
new
ÄÄ@ C
Uri
ÄÄD G
(
ÄÄG H
_configuration
ÄÄH V
.
ÄÄV W
ById
ÄÄW [
)
ÄÄ[ \
)
ÄÄ\ ]
;
ÄÄ] ^
if
ÇÇ 
(
ÇÇ 
res
ÇÇ 
.
ÇÇ !
IsSuccessStatusCode
ÇÇ +
)
ÇÇ+ ,
{
ÉÉ 
ConsumerInfo
ÑÑ  
=
ÑÑ! "
await
ÑÑ# (
FromResponseToDto
ÑÑ) :
(
ÑÑ: ;
res
ÑÑ; >
)
ÑÑ> ?
;
ÑÑ? @
if
ÖÖ 
(
ÖÖ 
ConsumerInfo
ÖÖ $
==
ÖÖ% '
null
ÖÖ( ,
)
ÖÖ, -
throw
ÜÜ 
new
ÜÜ !#
ArgumentNullException
ÜÜ" 7
(
ÜÜ7 8
nameof
ÜÜ8 >
(
ÜÜ> ?
id
ÜÜ? A
)
ÜÜA B
)
ÜÜB C
;
ÜÜC D
}
áá 
return
ââ 
ConsumerInfo
ââ #
;
ââ# $
}
ää 
catch
ãã 
(
ãã #
ArgumentNullException
ãã (
)
ãã( )
{
åå 
return
çç 
null
çç 
;
çç 
}
éé 
}
èè 	
private
ññ 
async
ññ 
Task
ññ 
<
ññ %
CustomerSingleSearchDto
ññ 2
>
ññ2 3
SiretSearch
ññ4 ?
(
ññ? @
string
ññ@ F
siret
ññG L
)
ññL M
{
óó 	
try
òò 
{
ôô 
if
öö 
(
öö 
string
öö 
.
öö 
IsNullOrEmpty
öö (
(
öö( )
siret
öö) .
)
öö. /
||
öö0 2
siret
öö3 8
.
öö8 9
Length
öö9 ?
!=
öö@ B
	Constants
ööC L
.
ööL M!
SiretRequiredLength
ööM `
)
öö` a
throw
õõ 
new
õõ #
ArgumentNullException
õõ 3
(
õõ3 4
nameof
õõ4 :
(
õõ: ;
siret
õõ; @
)
õõ@ A
)
õõA B
;
õõB C%
CustomerSingleSearchDto
ùù '
ConsumerInfo
ùù( 4
=
ùù5 6
new
ùù7 :%
CustomerSingleSearchDto
ùù; R
(
ùùR S
)
ùùS T
;
ùùT U
using
üü 
(
üü 
var
üü 
client
üü !
=
üü" #
_clientFactory
üü$ 2
.
üü2 3
CreateClient
üü3 ?
(
üü? @
)
üü@ A
)
üüA B
{
†† 
client
°° 
.
°° 
BaseAddress
°° &
=
°°' (
new
°°) ,
Uri
°°- 0
(
°°0 1
_configuration
°°1 ?
.
°°? @
BaseUrl
°°@ G
)
°°G H
;
°°H I
client
££ 
.
££ #
DefaultRequestHeaders
££ 0
.
££0 1
Clear
££1 6
(
££6 7
)
££7 8
;
££8 9
client
§§ 
.
§§ #
DefaultRequestHeaders
§§ 0
.
§§0 1
Accept
§§1 7
.
§§7 8
Add
§§8 ;
(
§§; <
new
§§< ?-
MediaTypeWithQualityHeaderValue
§§@ _
(
§§_ `
$str
§§` r
)
§§r s
)
§§s t
;
§§t u!
HttpResponseMessage
¶¶ '
res
¶¶( +
=
¶¶, -
await
¶¶. 3
client
¶¶4 :
.
¶¶: ;
GetAsync
¶¶; C
(
¶¶C D
new
¶¶D G
Uri
¶¶H K
(
¶¶K L
_configuration
¶¶L Z
.
¶¶Z [
BySiret
¶¶[ b
)
¶¶b c
)
¶¶c d
;
¶¶d e
if
®® 
(
®® 
res
®® 
.
®® !
IsSuccessStatusCode
®® /
)
®®/ 0
{
©© 
ConsumerInfo
™™ $
=
™™% &
await
™™' ,
FromResponseToDto
™™- >
(
™™> ?
res
™™? B
)
™™B C
;
™™C D
if
´´ 
(
´´ 
ConsumerInfo
´´ (
==
´´) +
null
´´, 0
)
´´0 1
throw
¨¨ !
new
¨¨" %#
ArgumentNullException
¨¨& ;
(
¨¨; <
nameof
¨¨< B
(
¨¨B C
siret
¨¨C H
)
¨¨H I
)
¨¨I J
;
¨¨J K
}
ÆÆ 
}
ØØ 
return
∞∞ 
ConsumerInfo
∞∞ #
;
∞∞# $
}
±± 
catch
≤≤ 
(
≤≤ #
ArgumentNullException
≤≤ (
)
≤≤( )
{
≥≥ 
return
¥¥ 
await
¥¥ 
Task
¥¥ !
.
¥¥! "

FromResult
¥¥" ,
<
¥¥, -%
CustomerSingleSearchDto
¥¥- D
>
¥¥D E
(
¥¥E F
null
¥¥F J
)
¥¥J K
;
¥¥K L
}
µµ 
}
∂∂ 	
private
ææ 
async
ææ 
Task
ææ 
<
ææ 
List
ææ 
<
ææ  '
CustomerMultipleSearchDto
ææ  9
>
ææ9 :
>
ææ: ;
MultipleSearch
ææ< J
(
ææJ K
string
ææK Q
socialReason
ææR ^
,
ææ^ _
string
ææ` f
zipcode
ææg n
)
ææn o
{
øø 	
try
¿¿ 
{
¡¡ 
if
¬¬ 
(
¬¬ 
string
¬¬ 
.
¬¬ 
IsNullOrEmpty
¬¬ (
(
¬¬( )
zipcode
¬¬) 0
)
¬¬0 1
||
¬¬2 4
string
¬¬5 ;
.
¬¬; <
IsNullOrEmpty
¬¬< I
(
¬¬I J
socialReason
¬¬J V
)
¬¬V W
)
¬¬W X
throw
√√ 
new
√√ #
ArgumentNullException
√√ 3
(
√√3 4
)
√√4 5
;
√√5 6
var
≈≈ 
consumerInfo
≈≈  
=
≈≈! "
new
≈≈# &
List
≈≈' +
<
≈≈+ ,'
CustomerMultipleSearchDto
≈≈, E
>
≈≈E F
(
≈≈F G
)
≈≈G H
;
≈≈H I
using
«« 
(
«« 
var
«« 
client
«« !
=
««" #
_clientFactory
««$ 2
.
««2 3
CreateClient
««3 ?
(
««? @
)
««@ A
)
««A B
{
»» 
client
…… 
.
…… 
BaseAddress
…… &
=
……' (
new
……) ,
Uri
……- 0
(
……0 1
_configuration
……1 ?
.
……? @
BaseUrl
……@ G
)
……G H
;
……H I
client
ÀÀ 
.
ÀÀ #
DefaultRequestHeaders
ÀÀ 0
.
ÀÀ0 1
Clear
ÀÀ1 6
(
ÀÀ6 7
)
ÀÀ7 8
;
ÀÀ8 9
client
ÃÃ 
.
ÃÃ #
DefaultRequestHeaders
ÃÃ 0
.
ÃÃ0 1
Accept
ÃÃ1 7
.
ÃÃ7 8
Add
ÃÃ8 ;
(
ÃÃ; <
new
ÃÃ< ?-
MediaTypeWithQualityHeaderValue
ÃÃ@ _
(
ÃÃ_ `
$str
ÃÃ` r
)
ÃÃr s
)
ÃÃs t
;
ÃÃt u!
HttpResponseMessage
ŒŒ '
res
ŒŒ( +
=
ŒŒ, -
await
ŒŒ. 3
client
ŒŒ4 :
.
ŒŒ: ;
GetAsync
ŒŒ; C
(
ŒŒC D
new
ŒŒD G
Uri
ŒŒH K
(
ŒŒK L
_configuration
ŒŒL Z
.
ŒŒZ [

ByMultiple
ŒŒ[ e
)
ŒŒe f
)
ŒŒf g
;
ŒŒg h
if
–– 
(
–– 
res
–– 
.
–– !
IsSuccessStatusCode
–– /
)
––/ 0
{
—— 
var
““ 
EmpResponse
““ '
=
““( )
await
““* /
res
““0 3
.
““3 4
Content
““4 ;
.
““; <
ReadAsStringAsync
““< M
(
““M N
)
““N O
;
““O P
if
”” 
(
”” 
EmpResponse
”” '
==
””( *
null
””+ /
)
””/ 0
{
‘‘ 
throw
’’ !
new
’’" %#
ArgumentNullException
’’& ;
(
’’; <
)
’’< =
;
’’= >
}
÷÷ 
consumerInfo
◊◊ $
=
◊◊% &
JsonConvert
◊◊' 2
.
◊◊2 3
DeserializeObject
◊◊3 D
<
◊◊D E
List
◊◊E I
<
◊◊I J'
CustomerMultipleSearchDto
◊◊J c
>
◊◊c d
>
◊◊d e
(
◊◊e f
EmpResponse
◊◊f q
)
◊◊q r
;
◊◊r s
}
ÿÿ 
}
ŸŸ 
return
€€ 
consumerInfo
€€ #
;
€€# $
}
‹‹ 
catch
›› 
(
›› #
ArgumentNullException
›› (
)
››( )
{
ﬁﬁ 
return
ﬂﬂ 
await
ﬂﬂ 
Task
ﬂﬂ !
.
ﬂﬂ! "

FromResult
ﬂﬂ" ,
<
ﬂﬂ, -
List
ﬂﬂ- 1
<
ﬂﬂ1 2'
CustomerMultipleSearchDto
ﬂﬂ2 K
>
ﬂﬂK L
>
ﬂﬂL M
(
ﬂﬂM N
null
ﬂﬂN R
)
ﬂﬂR S
;
ﬂﬂS T
}
‡‡ 
}
·· 	
private
ÈÈ 
static
ÈÈ 
async
ÈÈ 
Task
ÈÈ !
<
ÈÈ! "%
CustomerSingleSearchDto
ÈÈ" 9
>
ÈÈ9 :
FromResponseToDto
ÈÈ; L
(
ÈÈL M!
HttpResponseMessage
ÈÈM `
res
ÈÈa d
)
ÈÈd e
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
res
ÎÎ 
==
ÎÎ 
null
ÎÎ 
)
ÎÎ 
return
ÏÏ 
null
ÏÏ 
;
ÏÏ 
var
ÓÓ 
EmpResponse
ÓÓ 
=
ÓÓ 
await
ÓÓ #
res
ÓÓ$ '
.
ÓÓ' (
Content
ÓÓ( /
.
ÓÓ/ 0
ReadAsStringAsync
ÓÓ0 A
(
ÓÓA B
)
ÓÓB C
;
ÓÓC D
if
ÔÔ 
(
ÔÔ 
EmpResponse
ÔÔ 
==
ÔÔ 
null
ÔÔ #
)
ÔÔ# $
{
 
return
ÒÒ 
null
ÒÒ 
;
ÒÒ 
}
ÚÚ 
return
ÛÛ 
JsonConvert
ÛÛ 
.
ÛÛ 
DeserializeObject
ÛÛ 0
<
ÛÛ0 1%
CustomerSingleSearchDto
ÛÛ1 H
>
ÛÛH I
(
ÛÛI J
EmpResponse
ÛÛJ U
.
ÛÛU V
	Substring
ÛÛV _
(
ÛÛ_ `
$num
ÛÛ` a
,
ÛÛa b
EmpResponse
ÛÛc n
.
ÛÛn o
Length
ÛÛo u
-
ÛÛv w
$num
ÛÛx y
)
ÛÛy z
)
ÛÛz {
;
ÛÛ{ |
}
ÙÙ 	
}
ˆˆ 
}˜˜ Ü

CC:\Cds.BusinessCustomer\src\Infrastructure\CartegieConfiguration.cs
	namespace 	
Cds
 
. #
TestFormationDotnetcore %
.% &
Infrastructure& 4
{ 
public

 

class

 !
CartegieConfiguration

 &
{ 
public 
string 
BaseUrl 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 

getBaseUrl  
(  !
)! "
{ 	
return 
BaseUrl 
; 
} 	
public 
string 
ApiKey 
{ 
get "
;" #
set$ '
;' (
}) *
public"" 
string"" 
BySiret"" 
{"" 
get""  #
;""# $
set""% (
;""( )
}""* +
public'' 
string'' 

ByMultiple''  
{''! "
get''# &
;''& '
set''( +
;''+ ,
}''- .
public,, 
string,, 
ById,, 
{,, 
get,,  
;,,  !
set,," %
;,,% &
},,' (
}// 
}00 Ô
ZC:\Cds.BusinessCustomer\src\Infrastructure\CustomerRepository\Abstractions\ICartegieApi.cs
	namespace 	
Cds
 
. 
BusinessCustomer 
. 
Infrastructure -
.- .
CustomerRepository. @
.@ A
AbstractionsA M
{ 
public 

	interface 
ICartegieApi !
{ 
Task 
< 
List 
< %
CustomerMultipleSearchDto +
>+ ,
>, -
GetInfosByCriteria. @
(@ A
stringA G
socialReasonH T
,T U
stringV \
zipCode] d
)d e
;e f
Task 
< #
CustomerSingleSearchDto $
>$ %
GetInfosById& 2
(2 3
string3 9
id: <
)< =
;= >
Task"" 
<"" #
CustomerSingleSearchDto"" $
>""$ %
GetInfosBySiret""& 5
(""5 6
string""6 <
siret""= B
)""B C
;""C D
}## 
}$$ Û
_C:\Cds.BusinessCustomer\src\Infrastructure\CustomerRepository\Dtos\CustomerMultipleSearchDto.cs
	namespace 	
Cds
 
. 
BusinessCustomer 
. 
Infrastructure -
.- .
CustomerRepository. @
.@ A
DtosA E
{ 
public

 
class

 %
CustomerMultipleSearchDto

 .
{ 	
[ 
Required 
] 
[ 
JsonProperty 
( 
$str 
) 
]  
public 
string 
Id 
{ 
get "
;" #
set$ '
;' (
}) *
[ 
JsonProperty 
( 
$str !
)! "
]" #
public 
string 
Name 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 
JsonProperty 
( 
$str $
)$ %
]% &
public 
string 
Adress  
{! "
get# &
;& '
set( +
;+ ,
}- .
["" 
JsonProperty"" 
("" 
$str"" 
)"" 
]""  
public## 
string## 
SocialReason## &
{##' (
get##) ,
;##, -
set##. 1
;##1 2
}##3 4
}$$ 	
}%% «
]C:\Cds.BusinessCustomer\src\Infrastructure\CustomerRepository\Dtos\CustomerSingleSearchDto.cs
	namespace 	
Cds
 
. 
BusinessCustomer 
. 
Infrastructure -
.- .
CustomerRepository. @
.@ A
DtosA E
{ 
public 

class #
CustomerSingleSearchDto (
{ 
private 
const 
int 
SiretLength %
=& '
	Constants( 1
.1 2
SiretRequiredLength2 E
;E F
[ 	
JsonProperty	 
( 
$str  
)  !
]! "
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
JsonProperty	 
( 
$str 
) 
] 
[ 	
	MaxLength	 
( 
SiretLength 
) 
,  
	MinLength! *
(* +
SiretLength+ 6
)6 7
]7 8
public 
string 
Siret 
{ 
get !
;! "
set# &
;& '
}( )
["" 	
JsonProperty""	 
("" 
$str"" 
)""  
]""  !
public## 
string## 
NafCode## 
{## 
get##  #
;### $
set##% (
;##( )
}##* +
[(( 	
JsonProperty((	 
((( 
$str((  
)((  !
]((! "
public)) 
string)) 
Adress)) 
{)) 
get)) "
;))" #
set))$ '
;))' (
}))) *
[.. 	
JsonProperty..	 
(.. 
$str.. 
).. 
]..  
public// 
string// 
ZipCode// 
{// 
get//  #
;//# $
set//% (
;//( )
}//* +
[44 	
JsonProperty44	 
(44 
$str44 #
)44# $
]44$ %
public55 
string55 
City55 
{55 
get55  
;55  !
set55" %
;55% &
}55' (
[:: 	
JsonProperty::	 
(:: 
$str:: 
):: 
]:: 
public;; 
string;; 
SocialReason;; "
{;;# $
get;;% (
;;;( )
set;;* -
;;;- .
};;/ 0
[@@ 	
JsonProperty@@	 
(@@ 
$str@@  
)@@  !
]@@! "
publicAA 
stringAA 
CivilityAA 
{AA  
getAA! $
;AA$ %
setAA& )
;AA) *
}AA+ ,
[FF 	
JsonPropertyFF	 
(FF 
$strFF 
)FF 
]FF 
publicGG 
stringGG 
PhoneGG 
{GG 
getGG !
;GG! "
setGG# &
;GG& '
}GG( )
}II 
}JJ 